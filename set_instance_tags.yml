---
- name: Get instance details - amazon.aws.ec2_instance_info
  hosts: "{{ all | default('control[0]') }}"
  connection: local
  gather_facts: false
  tasks:
    - name: "Get instance details"
      ansible.builtin.include_role:
        name: infra.leapp.snapshot
        tasks_from: aws/get_instance_details

    - name: Debug - instances_details via amazon.aws.ec2_instance_info
      ansible.builtin.debug:
        msg: "{{ instances_details.instances | selectattr('tags.os_major_version', 'defined') }}"

    - name: Initialize list vars
      ansible.builtin.set_fact:
        host_distribution_major_version: "{{ instances_details.instances | selectattr('tags.os_major_version', 'defined') | map(attribute='tags.os_major_version') }}"
        host_ec2_instance_id: "{{ instances_details.instances | selectattr('instance_id', 'defined') | map(attribute='instance_id') }}"

    - name: Debug - host_distribution_major_version and host_ec2_instance_id
      ansible.builtin.debug:
        msg:
          - "{{ host_distribution_major_version }}"
          - "{{ host_ec2_instance_id }}"

- name: Get instance ansible facts
  hosts: "{{ rhel_inventory_group | default(omit) }}"
  become: true
  gather_facts: false
  vars:
    ansible_python_interpreter: /usr/libexec/platform-python
  tasks:
    - name: Wait for connection...and gather facts
      ansible.builtin.setup:
        gather_timeout: 60
      register: instance_facts
      ignore_errors: true
      until: "instance_facts is not failed"
      retries: 10
      delay: 10

    - name: Share instances_details facts from ansible-1 among all hosts
      ansible.builtin.set_fact:
        instances_details: "{{ hostvars.ansible1.instances_details }}"
      run_once: true

    - name: Debug - instances_details via amazon.aws.ec2_instance_info
      ansible.builtin.debug:
        msg: "{{ instances_details }}"

    - name: Debug - instance_facts via ansible
      ansible.builtin.debug:
        msg: "{{ instance_facts }}"
...
